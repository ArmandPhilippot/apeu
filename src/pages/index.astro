---
import Box from "../components/atoms/box/box.astro";
import Heading from "../components/atoms/heading/heading.astro";
import Grid from "../components/molecules/grid/grid.astro";
import CollectionCard from "../components/organisms/collection-card/collection-card.astro";
import PageLayout from "../components/templates/page-layout/page-layout.astro";
import { queryCollection } from "../lib/astro/collections/query-collection";
import { queryEntry } from "../lib/astro/collections/query-entry";
import { useI18n } from "../utils/i18n";

const { locale, translate } = useI18n(Astro.currentLocale);
const { Content, ...page } = await queryEntry({
  collection: "pages",
  id: "home",
  locale,
});
const { entries: collections } = await queryCollection("pages", {
  format: "preview",
  orderBy: { key: "title", order: "ASC" },
  where: {
    ids: [
      `${locale}/blog`,
      `${locale}/blogroll`,
      `${locale}/bookmarks`,
      `${locale}/contributions`,
      `${locale}/guides`,
      `${locale}/notes`,
      `${locale}/projects`,
      `${locale}/tags`,
    ],
    locale,
  },
});
---

<PageLayout heading={page.title} seo={page.seo}>
  <Content slot="body" />
  <Fragment slot="disconnected-body">
    {
      collections?.length ? (
        <section class="homepage__section">
          <Box
            elevation="raised"
            isBordered
            isCentered
            isPadded
            isProse
            isRounded
            isSpaced
          >
            <Heading as="h2">
              {translate("page.home.section.collections.heading")}
            </Heading>
          </Box>
          <Grid class="collections-list" isCentered items={collections}>
            {({ meta, ...collection }: (typeof collections)[number]) => (
              <CollectionCard
                elevation="raised"
                entry={collection}
                headingLvl="h3"
              />
            )}
          </Grid>
        </section>
      ) : null
    }
  </Fragment>
</PageLayout>

<style>
  .collections-list {
    @container (width > 55em) {
      --cols: repeat(auto-fit, minmax(27rem, auto));
    }
  }
</style>
