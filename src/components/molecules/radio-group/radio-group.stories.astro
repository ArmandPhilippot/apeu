---
import type { ComponentProps } from "astro/types";
import Heading from "../../atoms/heading/heading.astro";
import PageLayout from "../../templates/page-layout/page-layout.astro";
import RadioGroupComponent from "./radio-group.astro";
import RadioItem from "./radio-item.astro";

const title = "RadioGroup";
const breadcrumb: ComponentProps<typeof PageLayout>["breadcrumb"] = [
  { label: "Home", url: "/" },
  { label: "Design system", url: "/design-system" },
  { label: "Components", url: "/design-system/components" },
  { label: "Molecules", url: "/design-system/components/molecules" },
  { label: title, url: Astro.url.href },
];
const seo: ComponentProps<typeof PageLayout>["seo"] = {
  nofollow: true,
  noindex: true,
  title: breadcrumb
    .slice(1)
    .reverse()
    .map((crumb) => crumb.label)
    .join(" | "),
};

const getItems = (
  name: string,
): (ComponentProps<typeof RadioItem> & {
  label: string;
})[] => [
  { fieldId: `${name}-item-1`, label: "Item 1", name, value: "item-1" },
  { fieldId: `${name}-item-2`, label: "Item 2", name, value: "item-2" },
  { fieldId: `${name}-item-3`, label: "Item 3", name, value: "item-3" },
];
---

<PageLayout breadcrumb={breadcrumb} seo={seo} title={title}>
  <Fragment slot="body">
    <Heading as="h2">Usage</Heading>
    <p>This component is used to display a group of <code>RadioItem</code>.</p>
    <RadioGroupComponent label="The legend">
      {
        getItems("default").map((item) => (
          <RadioItem
            class="radio-group__item"
            fieldId={item.fieldId}
            name={item.name}
            value={item.value}
          >
            {item.label}
          </RadioItem>
        ))
      }
    </RadioGroupComponent>
    <Heading as="h2">Options</Heading>
    <Heading as="h3"><code>isBordered</code></Heading>
    <RadioGroupComponent isBordered label="The legend">
      {
        getItems("bordered").map((item, _idx, arr) => (
          <RadioItem
            class="radio-group__item"
            fieldId={item.fieldId}
            isChecked={item.value === arr[0]?.value}
            name={item.name}
            value={item.value}
          >
            {item.label}
          </RadioItem>
        ))
      }
    </RadioGroupComponent>
    <Heading as="h3"><code>isInline</code></Heading>
    <RadioGroupComponent isInline label="The legend">
      {
        getItems("inlined").map((item, _idx, arr) => (
          <RadioItem
            class="radio-group__item"
            fieldId={item.fieldId}
            isChecked={item.value === arr[0]?.value}
            name={item.name}
            value={item.value}
          >
            {item.label}
          </RadioItem>
        ))
      }
    </RadioGroupComponent>
    <Heading as="h3"><code>hideRadio</code> on <code>RadioItem</code></Heading>
    <RadioGroupComponent label="The legend">
      {
        getItems("hidden-radio").map((item, _idx, arr) => (
          <RadioItem
            class="radio-group__item"
            fieldId={item.fieldId}
            hideRadio
            isChecked={item.value === arr[0]?.value}
            name={item.name}
            value={item.value}
          >
            {item.label}
          </RadioItem>
        ))
      }
    </RadioGroupComponent>
  </Fragment>
</PageLayout>
