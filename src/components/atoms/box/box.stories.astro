---
import { getStoryMeta } from "../../../utils/stories";
import CodePreview from "../../molecules/code-preview/code-preview.astro";
import PageLayout from "../../templates/page-layout/page-layout.astro";
import Heading from "../heading/heading.astro";
import BoxComponent from "./box.astro";

const title = "Box";
const { breadcrumb, seo } = getStoryMeta({
  breadcrumb: {
    kind: "atoms",
    route: Astro.url.pathname,
    title,
  },
});
---

<PageLayout breadcrumb={breadcrumb} seo={seo} title={title}>
  <Fragment slot="body">
    <Heading as="h2">Introduction</Heading>
    <p>
      This component can be used to create a box that reuses the same styles
      across multiple components.
    </p>
    <CodePreview
      code={`import Box from "./components/atoms/box/box.astro"`}
      label="How to import"
    />
    <CodePreview code={`<Box>The box contents.</Box>`} label="Basic use">
      <BoxComponent>The box contents.</BoxComponent>
    </CodePreview>
    <Heading as="h2">Options</Heading>
    <Heading as="h3"><code>elevation</code></Heading>
    <CodePreview
      code={`<Box elevation="raised">The box contents.</Box>
<br />
<Box elevation="elevated">The box contents.</Box>
<br />
<Box elevation="floating">The box contents.</Box>`}
      label="Using elevation"
    >
      <BoxComponent elevation="raised">The box contents.</BoxComponent>
      <br />
      <BoxComponent elevation="elevated">The box contents.</BoxComponent>
      <br />
      <BoxComponent elevation="floating">The box contents.</BoxComponent>
    </CodePreview>
    <Heading as="h3"><code>isBordered</code></Heading>
    <CodePreview
      code={`<Box isBordered>The box contents.</Box>`}
      label="With borders"
    >
      <BoxComponent isBordered>The box contents.</BoxComponent>
    </CodePreview>
    <Heading as="h3"><code>isRounded</code></Heading>
    <CodePreview
      code={`<Box isBordered isRounded>The box contents.</Box>`}
      label="With rounded borders"
    >
      <BoxComponent isBordered isRounded>The box contents.</BoxComponent>
    </CodePreview>
    <Heading as="h3"><code>isPadded</code></Heading>
    <CodePreview
      code={`<Box isBordered isPadded>The box contents.</Box>`}
      label="With padding"
    >
      <BoxComponent isBordered isPadded>The box contents.</BoxComponent>
    </CodePreview>
    <Heading as="h3"><code>isProse</code></Heading>
    <p>This option will limit the size of the container.</p>
    <CodePreview
      code={`<Box isBordered isProse>
  <p>The first child should not have a top margin.</p>
  <p>In between you can use whatever you want.</p>
  <p>Each children of type block will have both top and bottom margins.</p>
  <p>The last child should not have a bottom margin.</p>
</Box>`}
      label="Using prose"
    >
      <BoxComponent isBordered isProse>
        <p>The first child should not have a top margin.</p>
        <p>In between you can use whatever you want.</p>
        <p>
          Each children of type block will have both top and bottom margins.
        </p>
        <p>The last child should not have a bottom margin.</p>
      </BoxComponent>
    </CodePreview>
    <Heading as="h3"><code>isCentered</code></Heading>
    <p>
      This option only have an effect if you limit the size of the container.
    </p>
    <CodePreview
      code={`<Box isBordered isCentered>The box contents.</Box>`}
      label="With centering"
    >
      <BoxComponent isBordered isCentered style="width: 15rem;"
        >The box contents.</BoxComponent
      >
    </CodePreview>
  </Fragment>
</PageLayout>
