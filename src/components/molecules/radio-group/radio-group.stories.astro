---
import { getStoryMeta } from "../../../utils/stories";
import Heading from "../../atoms/heading/heading.astro";
import PageLayout from "../../templates/page-layout/page-layout.astro";
import CodePreview from "../code-preview/code-preview.astro";
import RadioGroupComponent from "./radio-group.astro";
import RadioItem from "./radio-item.astro";

const title = "RadioGroup";
const { breadcrumb, seo } = getStoryMeta({
  breadcrumb: {
    kind: "molecules",
    route: Astro.url.pathname,
    title,
  },
});
---

<PageLayout breadcrumb={breadcrumb} seo={seo} title={title}>
  <Fragment slot="body">
    <Heading as="h2">Introduction</Heading>
    <p>This component is used to display a group of <code>RadioItem</code>.</p>
    <CodePreview
      code={`import RadioGroup from "./components/molecules/radio-group/radio-group.astro";
import RadioItem from "./components/molecules/radio-item/radio-item.astro";`}
      label="How to import"
      lang="ts"
    />
    <CodePreview
      code={`<RadioGroup label="The legend">
{
  [
    { fieldId: "use-item-1", label: "Item 1", name: "use", value: "item-1" },
    { fieldId: "use-item-2", label: "Item 2", name: "use", value: "item-2" },
    { fieldId: "use-item-3", label: "Item 3", name: "use", value: "item-3" },
  ].map((item) => (
    <RadioItem
      fieldId={item.fieldId}
      name={item.name}
      value={item.value}
    >
      {item.label}
    </RadioItem>
  ))
}
</RadioGroup>`}
      label="Basic use"
      lang="astro"
    >
      <RadioGroupComponent label="The legend">
        {
          [
            {
              fieldId: "use-item-1",
              label: "Item 1",
              name: "use",
              value: "item-1",
            },
            {
              fieldId: "use-item-2",
              label: "Item 2",
              name: "use",
              value: "item-2",
            },
            {
              fieldId: "use-item-3",
              label: "Item 3",
              name: "use",
              value: "item-3",
            },
          ].map((item) => (
            <RadioItem
              fieldId={item.fieldId}
              name={item.name}
              value={item.value}
            >
              {item.label}
            </RadioItem>
          ))
        }
      </RadioGroupComponent>
    </CodePreview>
    <Heading as="h2">Options</Heading>
    <Heading as="h3"><code>isBordered</code></Heading>
    <CodePreview
      code={`<RadioGroup isBordered label="The legend">
{
  [
    { fieldId: "bordered-item-1", label: "Item 1", name: "bordered", value: "item-1" },
    { fieldId: "bordered-item-2", label: "Item 2", name: "bordered", value: "item-2" },
    { fieldId: "bordered-item-3", label: "Item 3", name: "bordered", value: "item-3" },
  ].map((item) => (
    <RadioItem
      fieldId={item.fieldId}
      name={item.name}
      value={item.value}
    >
      {item.label}
    </RadioItem>
  ))
}
</RadioGroup>`}
      label="Using borders"
      lang="astro"
    >
      <RadioGroupComponent isBordered label="The legend">
        {
          [
            {
              fieldId: "bordered-item-1",
              label: "Item 1",
              name: "bordered",
              value: "item-1",
            },
            {
              fieldId: "bordered-item-2",
              label: "Item 2",
              name: "bordered",
              value: "item-2",
            },
            {
              fieldId: "bordered-item-3",
              label: "Item 3",
              name: "bordered",
              value: "item-3",
            },
          ].map((item) => (
            <RadioItem
              fieldId={item.fieldId}
              name={item.name}
              value={item.value}
            >
              {item.label}
            </RadioItem>
          ))
        }
      </RadioGroupComponent>
    </CodePreview>
    <Heading as="h3"><code>isInline</code></Heading>
    <CodePreview
      code={`<RadioGroup isInline label="The legend">
{
  [
    { fieldId: "inlined-item-1", label: "Item 1", name: "inlined", value: "item-1" },
    { fieldId: "inlined-item-2", label: "Item 2", name: "inlined", value: "item-2" },
    { fieldId: "inlined-item-3", label: "Item 3", name: "inlined", value: "item-3" },
  ].map((item) => (
    <RadioItem
      fieldId={item.fieldId}
      name={item.name}
      value={item.value}
    >
      {item.label}
    </RadioItem>
  ))
}
</RadioGroup>`}
      label="Inlining radio items"
      lang="astro"
    >
      <RadioGroupComponent isInline label="The legend">
        {
          [
            {
              fieldId: "inlined-item-1",
              label: "Item 1",
              name: "inlined",
              value: "item-1",
            },
            {
              fieldId: "inlined-item-2",
              label: "Item 2",
              name: "inlined",
              value: "item-2",
            },
            {
              fieldId: "inlined-item-3",
              label: "Item 3",
              name: "inlined",
              value: "item-3",
            },
          ].map((item) => (
            <RadioItem
              fieldId={item.fieldId}
              name={item.name}
              value={item.value}
            >
              {item.label}
            </RadioItem>
          ))
        }
      </RadioGroupComponent>
    </CodePreview>
    <Heading as="h3"><code>hideRadio</code> on <code>RadioItem</code></Heading>
    <CodePreview
      code={`<RadioGroup label="The legend">
{
  [
    { fieldId: "hidden-radio-item-1", label: "Item 1", name: "hidden-radio", value: "item-1" },
    { fieldId: "hidden-radio-item-2", label: "Item 2", name: "hidden-radio", value: "item-2" },
    { fieldId: "hidden-radio-item-3", label: "Item 3", name: "hidden-radio", value: "item-3" },
  ].map((item, _idx, arr) => (
    <RadioItem
      fieldId={item.fieldId}
      hideRadio
      isChecked={item.value === arr[0]?.value}
      name={item.name}
      value={item.value}
    >
      {item.label}
    </RadioItem>
  ))
}
</RadioGroup>`}
      label="Hiding the radio buttons"
      lang="astro"
    >
      <RadioGroupComponent isInline label="The legend">
        {
          [
            {
              fieldId: "hidden-radio-item-1",
              label: "Item 1",
              name: "hidden-radio",
              value: "item-1",
            },
            {
              fieldId: "hidden-radio-item-2",
              label: "Item 2",
              name: "hidden-radio",
              value: "item-2",
            },
            {
              fieldId: "hidden-radio-item-3",
              label: "Item 3",
              name: "hidden-radio",
              value: "item-3",
            },
          ].map((item, _idx, arr) => (
            <RadioItem
              fieldId={item.fieldId}
              hideRadio
              isChecked={item.value === arr[0]?.value}
              name={item.name}
              value={item.value}
            >
              {item.label}
            </RadioItem>
          ))
        }
      </RadioGroupComponent>
    </CodePreview>
  </Fragment>
</PageLayout>
