---
import type { HTMLAttributes } from "astro/types";
import { MissingSlotError } from "../../../utils/exceptions";

type LabelledFieldVariant = "inline" | "inline-reversed" | "vertical";

type Props = HTMLAttributes<"div"> & {
  /**
   * Determine the order of the field and its label.
   *
   * @default "vertical"
   */
  variant?: LabelledFieldVariant | null | undefined;
};

const { class: className, variant = "vertical", ...attrs } = Astro.props;

if (!Astro.slots.has("label")) throw new MissingSlotError("label");
if (!Astro.slots.has("field")) throw new MissingSlotError("field");
---

<div
  {...attrs}
  class:list={["labelled-field", className]}
  data-variant={variant}
>
  {
    variant === "inline-reversed" ? (
      <Fragment>
        <slot name="field" />
        <slot name="label" />
      </Fragment>
    ) : (
      <Fragment>
        <slot name="label" />
        <slot name="field" />
      </Fragment>
    )
  }
  {
    Astro.slots.has("hint") ? (
      <div class="labelled-field-hint">
        <slot name="hint" />
      </div>
    ) : null
  }
  {
    Astro.slots.has("errors") ? (
      <div class="labelled-field-errors">
        <slot name="errors" />
      </div>
    ) : null
  }
</div>

<style>
  .labelled-field {
    display: grid;

    &:where([data-variant="inline"], [data-variant="inline-reversed"]) {
      grid-template-columns: auto minmax(0, 1fr);
      align-items: center;
      row-gap: var(--spacing-xs);
    }

    &:where([data-variant="inline"]) {
      column-gap: var(--spacing-sm);
    }

    &:where([data-variant="inline-reversed"]) {
      column-gap: var(--spacing-xs);
    }

    &:where([data-variant="vertical"]) {
      gap: var(--spacing-xs);
    }

    &:has(input[type="checkbox"], input[type="radio"]) {
      justify-items: start;
    }
  }

  .labelled-field-hint {
    font-size: var(--font-size-xs);
  }

  .labelled-field-errors {
    color: var(--color-critical);
    font-size: var(--font-size-sm);

    & > :global(*) {
      margin: 0;
    }
  }

  :where([data-variant="inline"]) :global(label),
  :where([data-variant="inline-reversed"]) :global(:is(input, textarea)) {
    grid-column: 1;
  }

  :where([data-variant="inline-reversed"]) :global(label),
  :where([data-variant="inline"])
    :is(
      :global(input, textarea),
      .labelled-field-errors,
      .labelled-field-hint
    ) {
    grid-column: 2;
  }

  :where([data-variant="inline-reversed"])
    :is(.labelled-field-errors, .labelled-field-hint) {
    grid-column: 1 / -1;
  }
</style>
