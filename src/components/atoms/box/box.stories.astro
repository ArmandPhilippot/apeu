---
import type { ComponentProps } from "astro/types";
import PageLayout from "../../templates/page-layout/page-layout.astro";
import Heading from "../heading/heading.astro";
import BoxComponent from "./box.astro";

const title = "Box";
const breadcrumb: ComponentProps<typeof PageLayout>["breadcrumb"] = [
  { label: "Home", url: "/" },
  { label: "Design system", url: "/design-system" },
  { label: "Components", url: "/design-system/components" },
  { label: "Atoms", url: "/design-system/components/atoms" },
  { label: title, url: Astro.url.href },
];
const seo: ComponentProps<typeof PageLayout>["seo"] = {
  nofollow: true,
  noindex: true,
  title: breadcrumb
    .slice(1)
    .reverse()
    .map((crumb) => crumb.label)
    .join(" | "),
};
---

<PageLayout breadcrumb={breadcrumb} seo={seo} title={title}>
  <Fragment slot="body">
    <Heading as="h2">Usage</Heading>
    <p>
      This component can be used to create a box that reuse the same styles
      across multiple components.
    </p>
  </Fragment>
  <Fragment slot="disconnected-body">
    <BoxComponent>The box contents.</BoxComponent>
    <BoxComponent
      elevation="raised"
      isBordered
      isCentered
      isPadded
      isProse
      isRounded
      isSpaced
    >
      <Heading as="h2">Options</Heading>
      <Heading as="h3"><code>elevation</code></Heading>
      <Heading as="h4"><code>raised</code></Heading>
    </BoxComponent>
    <BoxComponent elevation="raised">The box contents.</BoxComponent>
    <BoxComponent
      elevation="raised"
      isBordered
      isCentered
      isPadded
      isProse
      isRounded
      isSpaced
    >
      <Heading as="h4"><code>elevated</code></Heading>
    </BoxComponent>
    <BoxComponent elevation="elevated">The box contents.</BoxComponent>
    <BoxComponent
      elevation="raised"
      isBordered
      isCentered
      isPadded
      isProse
      isRounded
      isSpaced
    >
      <Heading as="h4"><code>floating</code></Heading>
    </BoxComponent>
    <BoxComponent elevation="floating">The box contents.</BoxComponent>
    <BoxComponent
      elevation="raised"
      isBordered
      isCentered
      isPadded
      isProse
      isRounded
      isSpaced
    >
      <Heading as="h3"><code>isBordered</code></Heading>
    </BoxComponent>
    <BoxComponent isBordered>The box contents.</BoxComponent>
    <BoxComponent
      elevation="raised"
      isBordered
      isCentered
      isPadded
      isProse
      isRounded
      isSpaced
    >
      <Heading as="h3"><code>isCentered</code></Heading>
    </BoxComponent>
    <BoxComponent isCentered>The box contents.</BoxComponent>
    <BoxComponent
      elevation="raised"
      isBordered
      isCentered
      isPadded
      isProse
      isRounded
      isSpaced
    >
      <Heading as="h3"><code>isPadded</code></Heading>
    </BoxComponent>
    <BoxComponent isPadded>The box contents.</BoxComponent>
    <BoxComponent
      elevation="raised"
      isBordered
      isCentered
      isPadded
      isProse
      isRounded
      isSpaced
    >
      <Heading as="h3"><code>isProse</code></Heading>
    </BoxComponent>
    <BoxComponent isProse>The box contents.</BoxComponent>
    <BoxComponent
      elevation="raised"
      isBordered
      isCentered
      isPadded
      isProse
      isRounded
      isSpaced
    >
      <Heading as="h3"><code>isRounded</code></Heading>
    </BoxComponent>
    <BoxComponent isBordered isRounded>The box contents.</BoxComponent>
    <BoxComponent
      elevation="raised"
      isBordered
      isCentered
      isPadded
      isProse
      isRounded
      isSpaced
    >
      <Heading as="h2">Using <code>isProse</code></Heading>
    </BoxComponent>
    <BoxComponent isProse>
      <p>The first child should not have a top margin.</p>
      <p>In between you can use whatever you want.</p>
      <p>Each "not-inlined" children will have both top and bottom margins.</p>
      <p>The last child should not have a bottom margin.</p>
    </BoxComponent>
    <BoxComponent
      elevation="raised"
      isBordered
      isCentered
      isPadded
      isProse
      isRounded
      isSpaced
    >
      <Heading as="h3">With <code>isBordered</code></Heading>
    </BoxComponent>
    <BoxComponent isBordered isProse>The box contents.</BoxComponent>
    <BoxComponent
      elevation="raised"
      isBordered
      isCentered
      isPadded
      isProse
      isRounded
      isSpaced
    >
      <Heading as="h3">With <code>isCentered</code></Heading>
      <p>And <code>isBordered</code> to see the box limits.</p>
    </BoxComponent>
    <BoxComponent isBordered isCentered isProse>The box contents.</BoxComponent>
    <BoxComponent
      elevation="raised"
      isBordered
      isCentered
      isPadded
      isProse
      isRounded
      isSpaced
    >
      <Heading as="h3">With <code>isPadded</code></Heading>
      <p>And <code>isBordered</code> to see the box limits.</p>
    </BoxComponent>
    <BoxComponent isBordered isPadded isProse>The box contents.</BoxComponent>
  </Fragment>
</PageLayout>
