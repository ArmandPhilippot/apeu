a {
  color: var(--color-primary);
  outline-offset: var(--border-size-sm);
  text-decoration-thickness: 0.1ex;
  text-underline-offset: 0.35ex;
  transition: text-decoration-thickness 0.1s linear 0s;

  &:where(:hover, :focus) {
    color: var(--color-primary-light);
  }

  &:where(:focus-visible) {
    outline: var(--border-size-sm) solid var(--color-primary-lighter);
    transition: none;
  }

  &:has(> img, > svg) {
    display: inline-block;
    vertical-align: middle;

    & > :is(img, svg) {
      vertical-align: middle;
    }
  }

  &:has(> picture, > img) {
    display: block;
    width: fit-content;
  }

  &:hover {
    text-decoration-thickness: 0.3ex;
  }

  &:active {
    color: var(--color-primary-dark);
    text-decoration-thickness: 0.1ex;
  }

  &:focus-visible {
    border-radius: var(--border-radii-md);
    text-decoration-color: transparent;
    outline: var(--border-size-md) solid var(--color-primary-lighter);
    outline-offset: var(--border-size-md);
  }

  &:where([data-download="true"], [hreflang], [rel~="external"]) {
    &::after {
      display: inline-block;
      content: var(--is-lang-hidden, "\0000a0" var(--lang-icon, ""))
        var(--is-icon-hidden, "\0000a0" var(--link-icon, ""));
      font-size: var(--font-size-xs);
    }
  }

  &[hreflang] {
    --lang-icon: "[" attr(hreflang) "]";
  }

  &:not([hreflang]) {
    --is-lang-hidden: "";
  }

  &[rel~="external"]:not([data-download="true"]) {
    --link-icon: var(--external-icon);
  }

  &[data-download="true"]:not([rel~="external"]) {
    --link-icon: var(--download-icon);
  }

  &[data-download="true"][rel~="external"] {
    --link-icon: var(--download-icon) "\0000a0" var(--external-icon);
  }

  & > img {
    display: block;
    max-width: 100%;
    height: auto;
  }
}

address {
  font-style: normal;
}

:where(caption, figcaption) {
  padding: var(--spacing-3xs) var(--spacing-sm);
  background: var(--color-regular-lighter);
  color: var(--color-regular-high);
  font-size: var(--font-size-sm);
  font-weight: var(--font-weight-bold);
  text-align: center;
}

caption {
  background: var(--color-regular-dark);
}

cite {
  color: var(--color-regular-high);
  font-style: italic;
}

:is(code, kbd, samp, var) {
  font-family: var(--font-family-mono);
  font-size: inherit;
  line-height: inherit;
}

:is(kbd, samp, var) {
  white-space: nowrap;
}

:where(:not(pre)) > code,
kbd,
samp {
  border-radius: var(--border-radii-md);
}

:where(:not(pre)) > code {
  padding: var(--spacing-5xs) var(--spacing-3xs);
  background: var(--color-regular-low);
  border: var(--border-size-sm) solid var(--color-border-light);
  color: var(--color-on-regular-low);
}

:where(:not(samp)) > kbd {
  padding: var(--spacing-3xs) var(--spacing-2xs) var(--spacing-4xs);
  color: var(--color-regular-high);

  &:not(:has(kbd, samp)) {
    background: var(--color-regular-lighter);
    box-shadow:
      inset 0 0 var(--border-size-sm) var(--border-size-sm)
        var(--color-muted-light),
      0 0 0 var(--border-size-sm) var(--color-muted),
      var(--border-size-sm) var(--border-size-sm) 0 var(--border-size-sm)
        var(--color-shadow);
  }

  &:has(samp) {
    padding: var(--spacing-3xs) var(--spacing-2xs) var(--spacing-4xs);
    background: var(--color-regular-lighter);
    border: var(--border-size-sm) solid var(--color-border);
    box-shadow: var(--border-size-sm) var(--border-size-sm) 0 0
      var(--color-shadow);
    font-style: italic;
  }
}

:where(:not(kbd)) > samp {
  padding: var(--spacing-5xs) var(--spacing-3xs);
  background: var(--color-regular-lighter);
  border: var(--border-size-sm) solid var(--color-border-light);
  font-style: italic;

  &:not(:has(kbd)) {
    background: var(--color-regular-dark);
  }
}

:where(dd, dt) {
  display: inline;
}

dd {
  margin: 0;
}

dt {
  font-weight: var(--font-weight-bold);
}

:is(h1, h2, h3, h4, h5, h6) {
  color: var(--color-primary-high);
  font-weight: var(--font-weight-bold);
  text-wrap: balance;
}

h1 {
  font-size: var(--font-size-5xl);
}

h2 {
  font-size: var(--font-size-4xl);
}

h3 {
  font-size: var(--font-size-3xl);
}

h4 {
  font-size: var(--font-size-2xl);
}

h5 {
  font-size: var(--font-size-xl);
}

h6 {
  font-size: var(--font-size-lg);
}

label {
  color: var(--color-primary-high);
  font-weight: var(--font-weight-bold);

  &:where([for]) {
    cursor: pointer;
  }
}

legend {
  color: var(--color-primary-high);
  font-weight: var(--font-weight-bold);
}

mark {
  background: oklch(from var(--color-info) l c h / 35%);
  color: inherit;
}

:where([lang="fr"]) q {
  &::before {
    margin-inline-end: var(--spacing-4xs);
  }

  &::after {
    margin-inline-start: var(--spacing-4xs);
  }
}

table {
  max-width: 100%;
  border: var(--border-size-sm) solid var(--color-border);
  border-collapse: collapse;
  table-layout: fixed;
  white-space: nowrap;

  & th,
  td,
  caption {
    width: auto;
    padding: var(--spacing-3xs) var(--spacing-xs);
    border: var(--border-size-sm) solid var(--color-border);
  }

  & th {
    font-weight: var(--font-weight-bold);
  }

  & caption {
    text-align: center;

    &:first-child {
      margin-block-end: var(--spacing-4xs);
    }

    &:last-child {
      margin-block-start: var(--spacing-4xs);
    }
  }
}

*:is(h2, h3, h4, h5, h6, p, figure) + *:is(h2, h3, h4, h5, h6, p, figure) {
  margin-block: var(--spacing-md);
}

/* Browsers default quotes do not use a space after/before French quotes which is a mistake, so we need custom styles. */
:root:lang(fr) {
  quotes: "« " " »" "‹ " " ›";
}

:root:lang(en) {
  quotes: "“" "”" "‘" "’";
}
