---
import type { ComponentProps } from "astro/types";
import ListItem from "../../components/atoms/list/list-item.astro";
import List from "../../components/atoms/list/list.astro";
import PageLayout from "../../components/templates/page-layout/page-layout.astro";
import { queryCollection } from "../../lib/astro/collections/query-collection";
import { queryEntry } from "../../lib/astro/collections/query-entry";
import { useI18n } from "../../utils/i18n";

const { locale, route, translate } = useI18n(Astro.currentLocale);
const { Content, ...page } = await queryEntry({
  collection: "pages",
  id: "blogroll",
  locale,
});
const { entries: blogroll } = await queryCollection("blogroll", {
  orderBy: { key: "title", order: "ASC" },
});
const breadcrumb: ComponentProps<typeof PageLayout>["breadcrumb"] = [
  { label: translate("page.home.title"), url: route("home") },
  { label: page.title, url: Astro.url.href },
];
---

<PageLayout breadcrumb={breadcrumb} heading={page.title} seo={page.seo}>
  <Fragment slot="body">
    <Content />
    <List>
      {blogroll.map((blog) => <ListItem>{blog.title}</ListItem>)}
    </List>
  </Fragment>
</PageLayout>
