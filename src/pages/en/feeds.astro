---
import { Icon } from "astro-icon/components";
import type { ComponentProps } from "astro/types";
import Button from "../../components/atoms/button/button.astro";
import Link from "../../components/atoms/link/link.astro";
import ListItem from "../../components/atoms/list/list-item.astro";
import List from "../../components/atoms/list/list.astro";
import { components } from "../../components/mdx";
import CollectionMeta from "../../components/organisms/collection-meta/collection-meta.astro";
import PageLayout from "../../components/templates/page-layout/page-layout.astro";
import { queryEntry } from "../../lib/astro/collections";
import { getRouteIndex } from "../../lib/astro/route-index";
import { getWebPageGraph } from "../../lib/schema-dts/graphs/webpage-graph";
import { getBreadcrumb } from "../../utils/breadcrumb";
import { getCollectionsFeeds } from "../../utils/feeds";
import { useI18n } from "../../utils/i18n";

const { locale, route, translate } = useI18n(Astro.currentLocale);
const { Content, ...page } = await queryEntry({
  collection: "pages",
  id: "feeds",
  locale,
});
const routeIndex = await getRouteIndex();
const breadcrumb = getBreadcrumb({
  route: Astro.url.pathname,
  routeIndex,
});
const graphs: ComponentProps<typeof PageLayout>["graphs"] = [
  await getWebPageGraph({ ...page, breadcrumb }),
];

const feeds = await getCollectionsFeeds(locale);
---

<PageLayout
  breadcrumb={breadcrumb}
  description={page.description}
  graphs={graphs}
  seo={page.seo}
  title={page.title}
  toc={page.headings}
>
  <CollectionMeta data={page.meta} slot="meta" />
  <Fragment slot="body">
    <Content components={components} />
    <p>{translate("page.feeds.global.feed.introduction")}</p>
    <p>
      <Button as="a" href={`${route("home")}feed.xml`}>
        <Icon aria-hidden="true" name="feed" />
        {translate("cta.subscribe.to.website")}
      </Button>
    </p>
    <p>{translate("page.feeds.individual.feeds.introduction")}</p>
    <List>
      {
        feeds.map((feed) => (
          <ListItem>
            <Link href={feed.slug}>{feed.label}</Link>
          </ListItem>
        ))
      }
    </List>
  </Fragment>
</PageLayout>
