---
import type { ComponentProps } from "astro/types";
import { components } from "../components/mdx";
import SearchForm from "../components/organisms/search-form/search-form.astro";
import PageLayout from "../components/templates/page-layout/page-layout.astro";
import { queryEntry } from "../lib/astro/collections";
import { getRouteIndex } from "../lib/astro/route-index";
import { getWebPageGraph } from "../lib/schema-dts/graphs/webpage-graph";
import { getBreadcrumb } from "../utils/breadcrumb";
import { CONFIG } from "../utils/constants";
import { useI18n } from "../utils/i18n";

const { locale, route } = useI18n(Astro.currentLocale);
const { Content, ...page } = await queryEntry({
  collection: "pages",
  id: "404",
  locale,
});
const routeIndex = await getRouteIndex();
const breadcrumb = getBreadcrumb({
  route: Astro.url.pathname,
  routeIndex,
});
const graphs: ComponentProps<typeof PageLayout>["graphs"] = [
  await getWebPageGraph({ ...page, breadcrumb }),
];
---

<PageLayout
  breadcrumb={breadcrumb}
  description={page.description}
  graphs={graphs}
  seo={page.seo}
  title={page.title}
>
  <Fragment slot="body">
    <Content components={components} />
    <SearchForm
      id="not-found-search"
      queryParam={CONFIG.SEARCH.QUERY_PARAM}
      resultsPage={route("search")}
    />
  </Fragment>
</PageLayout>
