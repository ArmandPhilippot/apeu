---
import { getStoryMeta } from "../../../utils/stories";
import Heading from "../../atoms/heading/heading.astro";
import PageLayout from "../../templates/page-layout/page-layout.astro";
import CodePreview from "../code-preview/code-preview.astro";
import NavItem from "../nav-item/nav-item.astro";
import NavListComponent from "./nav-list.astro";

const title = "NavList";
const { breadcrumb, seo } = getStoryMeta({
  breadcrumb: {
    kind: "molecules",
    route: Astro.url.pathname,
    title,
  },
});
---

<PageLayout breadcrumb={breadcrumb} seo={seo} title={title}>
  <Fragment slot="body">
    <Heading as="h2">Introduction</Heading>
    <p>
      This component is used to define a navigation list. It accepts an <code
        >items</code
      > property and expect a function as child to render these items. You can choose
      the way to render the children but it is recommended to use the <code
        >NavItem</code
      > component.
    </p>
    <CodePreview
      code={`import NavList from "./components/molecules/nav-list/nav-list.astro";`}
      label="How to import"
      lang="ts"
    />
    <CodePreview
      code={`<NavList
  items={[
    { label: "Item 1", url: "#item-1" },
    { label: "Item 2", url: "#item-2" },
    { label: "Item 3", url: "#item-3" },
  ]}
>
  {
    (item) => (
      <NavItem href={item.url} icon={item.icon} iconSize={item.iconSize}>
        {item.label}
      </NavItem>
    )
  }
</NavList>`}
      label="Basic use"
      lang="astro"
    >
      <NavListComponent
        items={[
          { label: "Item 1", url: "#item-1" },
          { label: "Item 2", url: "#item-2" },
          { label: "Item 3", url: "#item-3" },
        ]}
      >
        {
          (item) => (
            <NavItem href={item.url} icon={item.icon} iconSize={item.iconSize}>
              {item.label}
            </NavItem>
          )
        }
      </NavListComponent>
    </CodePreview>
  </Fragment>
</PageLayout>
