---
import { getStoryMeta } from "../../../utils/stories";
import Heading from "../../atoms/heading/heading.astro";
import PageLayout from "../../templates/page-layout/page-layout.astro";
import CopyToClipboardComponent from "./copy-to-clipboard.astro";

const title = "CopyToClipboard";
const { breadcrumb, seo } = getStoryMeta({
  breadcrumb: {
    kind: "molecules",
    route: Astro.url.pathname,
    title,
  },
});
---

<PageLayout breadcrumb={breadcrumb} seo={seo} title={title}>
  <Fragment slot="body">
    <Heading as="h2">Usage</Heading>
    <p>
      A <code>CopyToClipboard</code> component should be used as a call to action
      to let users copy some contents to their clipboard with a simple click.
    </p>
    <Heading as="h2">Example 1</Heading>
    <p>The copy button can copy a text in an element next to the button.</p>
    <div id="example1">
      <CopyToClipboardComponent
        feedback="Copied!"
        label="Copy example 1"
        selector="#example1 > div"
      />
      <div>The contents to copy to the clipboard.</div>
    </div>
    <Heading as="h2">Example 2</Heading>
    <p>
      The copy button can copy a text in an element placed before the button.
    </p>
    <pre
      id="example2">
          <code>console.log("Hello, world!");</code>
        </pre>
    <CopyToClipboardComponent
      feedback="Code copied!"
      label="Copy code in example 2"
      selector="pre > code"
    />
    <Heading as="h2">Example 3</Heading>
    <p>
      The copy button can look for the text to copy using an ancestor of the
      button by providing a <code>lookUpNodeLvl</code> prop. This can be useful if
      you use a generic
      <code>selector</code> which is repeated multiple times across the document.
    </p>
    <div>
      <div>
        <div>
          <CopyToClipboardComponent
            feedback="Answer copied!"
            label="Copy code in example 3"
            lookUpNodeLvl={3}
            selector="code"
          />
        </div>
      </div>
      <pre>
            <code>console.log("The answer to universe is 42!");</code>
          </pre>
    </div>
    <p>
      Without <code>lookUpNodeLvl</code>, the button would have copied the
      previous example instead of this one when using <code>code</code> as <code
        >selector</code
      >.
    </p>
  </Fragment>
</PageLayout>
