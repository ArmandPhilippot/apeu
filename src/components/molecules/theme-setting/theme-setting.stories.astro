---
import { getStoryMeta } from "../../../utils/stories";
import Heading from "../../atoms/heading/heading.astro";
import PageLayout from "../../templates/page-layout/page-layout.astro";
import CodePreview from "../code-preview/code-preview.astro";
import ThemeSettingComponent from "./theme-setting.astro";

const title = "ThemeSetting";
const { breadcrumb, seo } = getStoryMeta({
  breadcrumb: {
    kind: "molecules",
    route: Astro.url.pathname,
    title,
  },
});
---

<PageLayout breadcrumb={breadcrumb} seo={seo} title={title}>
  <Fragment slot="body">
    <Heading as="h2">Introduction</Heading>
    <p>
      A <code>ThemeSetting</code> component is used to let the user choose the he
      wants to use for the website.
    </p>
    <CodePreview
      code={`import ThemeSetting from "./components/molecules/theme-setting/theme-setting.astro";`}
      label="How to import"
      lang="ts"
    />
    <CodePreview
      code={`<ThemeSetting label="Choose a theme:" setting="theme" />`}
      label="Basic use"
      lang="astro"
    >
      <ThemeSettingComponent label="Choose a theme:" setting="theme" />
    </CodePreview>
    <Heading as="h2">Options</Heading>
    <Heading as="h3"><code>isInline</code></Heading>
    <CodePreview
      code={`<ThemeSetting
  id="inlined-example"
  isInline
  label="Choose a theme:"
  setting="theme"
/>`}
      label="Using isInline"
      lang="astro"
    >
      <ThemeSettingComponent
        id="inlined-example"
        isInline
        label="Choose a theme:"
        setting="theme"
      />
    </CodePreview>
    <Heading as="h3"><code>variant="switch"</code></Heading>
    <CodePreview
      code={`<ThemeSetting
  label="Enable dark mode?"
  setting="theme"
  variant="switch"
/>`}
      label="Using the switch variant"
      lang="astro"
    >
      <ThemeSettingComponent
        label="Enable dark mode?"
        setting="theme"
        variant="switch"
      />
    </CodePreview>
    <Heading as="h2">With multiple toggles on the page</Heading>
    <p>
      If you need multiple toggles on the same page for the same setting key,
      you must provide an <code>id</code>.
    </p>
    <CodePreview
      code={`<ThemeSetting
  id="toggle1"
  label="Choose a theme:"
  setting="shiki"
  variant="toggle"
/>
<ThemeSetting
  id="toggle2"
  label="Choose a theme:"
  setting="shiki"
  variant="toggle"
/>
<ThemeSetting
  id="toggle3"
  label="Choose a theme:"
  setting="shiki"
  variant="toggle"
/>`}
      label="Using multiple toggles on a page"
      lang="astro"
    >
      <ThemeSettingComponent
        id="toggle1"
        label="Choose a theme:"
        setting="shiki"
        variant="toggle"
      />
      <ThemeSettingComponent
        id="toggle2"
        label="Choose a theme:"
        setting="shiki"
        variant="toggle"
      />
      <ThemeSettingComponent
        id="toggle3"
        label="Choose a theme:"
        setting="shiki"
        variant="toggle"
      />
    </CodePreview>
    <p>This limitation does not apply to the switch variant.</p>
    <CodePreview
      code={`<ThemeSetting
  label="Enable dark mode?"
  setting="shiki"
  variant="switch"
/>
<ThemeSetting
  label="Enable dark mode?"
  setting="shiki"
  variant="switch"
/>
<ThemeSetting
  label="Enable dark mode?"
  setting="shiki"
  variant="switch"
/>`}
      label="Using multiple switches on a page"
      lang="astro"
    >
      <ThemeSettingComponent
        label="Enable dark mode?"
        setting="shiki"
        variant="switch"
      />
      <ThemeSettingComponent
        label="Enable dark mode?"
        setting="shiki"
        variant="switch"
      />
      <ThemeSettingComponent
        label="Enable dark mode?"
        setting="shiki"
        variant="switch"
      />
    </CodePreview>
  </Fragment>
</PageLayout>
