---
import { Icon } from "astro-icon/components";
import type { ComponentProps } from "astro/types";
import type { AuthorPreview } from "../../../types/data";
import { useI18n } from "../../../utils/i18n";
import Button from "../../atoms/button/button.astro";
import Card from "../../molecules/card/card.astro";
import SocialLinks from "../../molecules/social-links/social-links.astro";

type Props = ComponentProps<typeof Card> &
  Pick<ComponentProps<typeof SocialLinks>, "addRelMe"> &
  Pick<AuthorPreview, "socialMedia">;

const {
  addRelMe = false,
  class: className,
  socialMedia,
  ...attrs
} = Astro.props;
const { route, translate } = useI18n(Astro.currentLocale);
---

<Card {...attrs} class:list={["contact-card", className]}>
  <slot name="heading" slot={Astro.slots.has("heading") ? "heading" : ""} />
  <p>{translate("card.contact.cta.intro")}</p>
  <Button as="a" href={route("contact")}>
    <Icon aria-hidden="true" name="contact" size={24} />
    {translate("cta.contact.me")}
  </Button>
  {
    socialMedia ? (
      <Fragment>
        <p>{translate("card.contact.social.links.intro")}</p>
        <SocialLinks addRelMe={addRelMe} hideLabels links={socialMedia} />
      </Fragment>
    ) : null
  }
</Card>
